{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","components/common/pickers/DayjsDatePicker.tsx","components/common/pickers/DatePicker.tsx","components/common/Upload/Upload.styles.ts","components/common/Upload/Upload.tsx","components/common/Rate/Rate.styles.ts","components/common/Rate/Rate.tsx","components/forms/DynamicForm/DynamicForm.styles.ts","components/forms/DynamicForm/DynamicForm.tsx","components/forms/ControlForm/AddUserFormModal.tsx","components/forms/ControlForm/useResetFormOnCloseModal.ts","components/forms/ControlForm/ControlForm.styles.ts","components/forms/ControlForm/ControlForm.tsx","components/common/Slider/Slider.styles.ts","components/common/Slider/Slider.tsx","components/forms/ValidationForm/ValidationForm.tsx","components/forms/StepForm/StepForm.styles.ts","components/forms/StepForm/Steps/Step1.tsx","components/forms/StepForm/Steps/Step2.tsx","components/forms/StepForm/Steps/Step3.tsx","components/forms/StepForm/Steps/Step4.tsx","components/forms/StepForm/StepForm.tsx","pages/AdvancedFormsPage.tsx"],"names":["BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","BaseForm","useForm","formDefault","currentForm","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","BaseButtonsGroup","className","t","useTranslation","gutter","wrap","span","block","type","onClick","htmlType","DayjsDatePicker","generatePicker","dayjsGenerateConfig","DatePicker","React","forwardRef","ref","Upload","styled","AntdUpload","UploadDragger","Dragger","Rate","AntdRate","FONT_SIZE","lg","Wrapper","div","RemoveBtn","MinusCircleOutlined","DynamicForm","useState","isLoading","setLoading","areas","label","value","sights","Beijing","Shanghai","name","onFinish","values","setTimeout","notificationController","success","message","console","log","autoComplete","onFieldsChange","rules","required","Select","options","onChange","setFieldsValue","fields","add","remove","map","field","align","justify","noStyle","shouldUpdate","prevValues","curValues","area","fieldKey","key","disabled","getFieldValue","item","Input","Button","icon","PlusOutlined","AddUserFormModal","open","prevOpenRef","useRef","useEffect","current","prevOpen","useResetFormOnCloseModal","title","onOk","submit","layout","InputNumber","$block","UserList","md","FONT_WEIGHT","semibold","Text","ul","ListItem","li","User","AddUserButton","labelCol","wrapperCol","ControlForm","setOpen","onFormFinish","forms","controlForm","users","length","user","index","UserOutlined","age","SmileOutlined","Slider","AntdSlider","formItemLayout","normFile","e","fileList","Array","isArray","ValidationForm","initialValues","rate","hasFeedback","placeholder","mode","min","max","valuePropName","Switch","tooltip","marks","Radio","Checkbox","getValueFromEvent","action","listType","UploadOutlined","InboxOutlined","PhoneItem","Steps","AntdSteps","FormContent","PrevButton","CommonSelect","Details","DetailsRow","DetailsTitle","DetailsValue","Row","Step1","InputPassword","dependencies","validator","_","Promise","reject","Error","resolve","Picker","Step2","prefixSelector","format","addonBefore","Step3","Step4","formValues","filter","StepForm","setCurrent","Dates","getDate","setFields","setIsLoading","formLabels","login","password","confirmPassword","salutation","gender","firstName","lastName","birthday","phone","email","address1","address2","zipCode","city","country","String","steps","formFieldsUi","allFields","currentFields","uniqueData","mergeBy","labelPlacement","size","items","validateFields","then","AdvancedFormsPage","PageTitle","xs","sm","xl","Card","id","padding"],"mappings":"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","file":"static/js/8.3ead370a.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import { AppDate } from 'constants/Dates';\nimport dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/es/date-picker/generatePicker';\nimport 'antd/es/date-picker/style/index';\n\nexport const DayjsDatePicker = generatePicker<AppDate>(dayjsGenerateConfig);\n","import React from 'react';\nimport { PickerProps } from 'antd/lib/date-picker/generatePicker';\nimport { DayjsDatePicker } from './DayjsDatePicker';\nimport { AppDate } from 'constants/Dates';\n\ntype DatePickerProps = PickerProps<AppDate>;\n\nexport const DatePicker = React.forwardRef<React.Component<DatePickerProps>, DatePickerProps>(\n  ({ className, ...props }, ref) => <DayjsDatePicker ref={ref} className={className} {...props} />,\n);\n","import styled from 'styled-components';\nimport { Upload as AntdUpload } from 'antd';\n\nexport const Upload = styled(AntdUpload)``;\n","import { Upload as AntdUpload, UploadProps } from 'antd';\nimport * as S from './Upload.styles';\n\nexport const { Dragger: UploadDragger } = AntdUpload;\n\nexport const Upload: React.FC<UploadProps> = (props) => {\n  return <S.Upload {...props} />;\n};\n","import styled from 'styled-components';\nimport { Rate as AntdRate } from 'antd';\nimport { FONT_SIZE } from '@app/styles/themes/constants';\n\nexport const Rate = styled(AntdRate)`\n  font-size: ${FONT_SIZE.lg};\n`;\n","import { RateProps } from 'antd';\nimport * as S from './Rate.styles';\n\nexport const Rate: React.FC<RateProps> = (props) => {\n  return <S.Rate {...props} />;\n};\n","import { MinusCircleOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const RemoveBtn = styled(MinusCircleOutlined)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  transform: translateY(-150%);\n`;\n","import React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './DynamicForm.styles';\n\ninterface Sight {\n  [key: string]: string[];\n}\n\nexport const DynamicForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [form] = BaseButtonsForm.useForm();\n  const { t } = useTranslation();\n\n  const areas = [\n    { label: t('forms.dynamicFormLabels.beijing'), value: 'Beijing' },\n    { label: t('forms.dynamicFormLabels.shanghai'), value: 'Shanghai' },\n  ];\n\n  const sights: Sight = {\n    Beijing: [t('forms.dynamicFormLabels.tiananmen'), t('forms.dynamicFormLabels.greatWall')],\n    Shanghai: [t('forms.dynamicFormLabels.orientalPearl'), t('forms.dynamicFormLabels.theBund')],\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  const handleChange = () => {\n    form.setFieldsValue({ sights: [] });\n  };\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      name=\"dynamicForm\"\n      isFieldsChanged={isFieldsChanged}\n      loading={isLoading}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <BaseButtonsForm.Item\n        name=\"area\"\n        label={t('forms.dynamicFormLabels.area')}\n        rules={[{ required: true, message: t('forms.dynamicFormLabels.areaError') }]}\n      >\n        <Select options={areas} onChange={handleChange} />\n      </BaseButtonsForm.Item>\n      <BaseButtonsForm.List name=\"sights\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map((field) => (\n              <Row key={field.key} wrap={false} gutter={[10, 10]} align=\"middle\" justify=\"space-between\">\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    noStyle\n                    // eslint-disable-next-line\n                    shouldUpdate={(prevValues: any, curValues: any) =>\n                      prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\n                    }\n                  >\n                    {() => (\n                      <BaseButtonsForm.Item\n                        {...field}\n                        label={t('forms.dynamicFormLabels.sight')}\n                        name={[field.name, 'sight']}\n                        fieldKey={[field.key, 'sight']}\n                        rules={[{ required: true, message: t('forms.dynamicFormLabels.sightError') }]}\n                      >\n                        <Select disabled={!form.getFieldValue('area')}>\n                          {(sights[form.getFieldValue('area')] || []).map((item) => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      </BaseButtonsForm.Item>\n                    )}\n                  </BaseButtonsForm.Item>\n                </Col>\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    {...field}\n                    label={t('forms.dynamicFormLabels.price')}\n                    name={[field.name, 'price']}\n                    fieldKey={[field.key, 'price']}\n                    rules={[{ required: true, message: t('forms.dynamicFormLabels.priceError') }]}\n                  >\n                    <S.Wrapper>\n                      <Input />\n                      <S.RemoveBtn onClick={() => remove(field.name)} />\n                    </S.Wrapper>\n                  </BaseButtonsForm.Item>\n                </Col>\n              </Row>\n            ))}\n\n            <BaseButtonsForm.Item>\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                {t('forms.dynamicFormLabels.addSights')}\n              </Button>\n            </BaseButtonsForm.Item>\n          </>\n        )}\n      </BaseButtonsForm.List>\n    </BaseButtonsForm>\n  );\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { useResetFormOnCloseModal } from './useResetFormOnCloseModal';\n\ninterface AddUserFormModalProps {\n  open: boolean;\n  onCancel: () => void;\n}\n\nexport const AddUserFormModal: React.FC<AddUserFormModalProps> = ({ open, onCancel }) => {\n  const [form] = BaseForm.useForm();\n  const { t } = useTranslation();\n\n  useResetFormOnCloseModal({\n    form,\n    open,\n  });\n\n  const onOk = () => {\n    form.submit();\n  };\n\n  return (\n    <Modal title={t('forms.controlFormLabels.newUser')} open={open} onOk={onOk} onCancel={onCancel}>\n      <BaseForm form={form} layout=\"vertical\" name=\"userForm\">\n        <BaseForm.Item\n          name=\"name\"\n          label={t('common.name')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <Input />\n        </BaseForm.Item>\n        <BaseForm.Item\n          name=\"age\"\n          label={t('common.age')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <InputNumber $block />\n        </BaseForm.Item>\n      </BaseForm>\n    </Modal>\n  );\n};\n","import { useEffect, useRef } from 'react';\nimport { FormInstance } from 'antd';\n\nexport const useResetFormOnCloseModal = ({ form, open }: { form: FormInstance; open: boolean }): void => {\n  const prevOpenRef = useRef<boolean>();\n  useEffect(() => {\n    prevOpenRef.current = open;\n  }, [open]);\n  const prevOpen = prevOpenRef.current;\n\n  useEffect(() => {\n    if (!open && prevOpen) {\n      form.resetFields();\n    }\n  }, [open, form, prevOpen]);\n};\n","import styled from 'styled-components';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const UserList = styled(BaseForm.Item)`\n  & label {\n    font-size: ${FONT_SIZE.md};\n    font-weight: ${FONT_WEIGHT.semibold};\n  }\n`;\n\nexport const Text = styled.div`\n  color: var(--primary-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.8rem;\n`;\n\nexport const User = styled.div`\n  color: var(--text-main-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  margin-left: 0.5rem;\n`;\n\nexport const AddUserButton = styled(Button)`\n  margin: 0 0.5rem;\n`;\n","import React, { useState } from 'react';\nimport { Avatar } from 'antd';\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { AddUserFormModal } from './AddUserFormModal';\nimport { Input } from '../../common/inputs/Input/Input';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './ControlForm.styles';\nimport { notificationController } from '@app/controllers/notificationController';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\ninterface UserType {\n  name: string;\n  age: string;\n}\n\nexport const ControlForm: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const showUserModal = () => {\n    setOpen(true);\n  };\n\n  const hideUserModal = () => {\n    setOpen(false);\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setFieldsChanged(false);\n      setLoading(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm.Provider\n      onFormFinish={(name, { values, forms }) => {\n        if (name === 'userForm') {\n          const { controlForm } = forms;\n          const users = controlForm.getFieldValue('users') || [];\n          controlForm.setFieldsValue({ users: [...users, values] });\n          setOpen(false);\n        }\n      }}\n    >\n      <BaseButtonsForm\n        {...layout}\n        name=\"controlForm\"\n        isFieldsChanged={isFieldsChanged}\n        footer={\n          <BaseButtonsForm.Item>\n            <Button htmlType=\"submit\" type=\"primary\" loading={isLoading}>\n              {t('common.submit')}\n            </Button>\n            <S.AddUserButton type=\"default\" htmlType=\"button\" onClick={showUserModal}>\n              {t('forms.controlFormLabels.addUser')}\n            </S.AddUserButton>\n          </BaseButtonsForm.Item>\n        }\n        onFinish={onFinish}\n        onFieldsChange={() => setFieldsChanged(true)}\n      >\n        <BaseButtonsForm.Item\n          name=\"group\"\n          label={t('forms.controlFormLabels.groupName')}\n          rules={[{ required: true, message: t('forms.controlFormLabels.groupNameError') }]}\n        >\n          <Input />\n        </BaseButtonsForm.Item>\n        <S.UserList\n          label={t('forms.controlFormLabels.userList')}\n          // eslint-disable-next-line\n          shouldUpdate={(prevValues: any, curValues: any) => prevValues.users !== curValues.users}\n        >\n          {({ getFieldValue }) => {\n            const users: UserType[] = getFieldValue('users') || [];\n            return users.length ? (\n              <S.List>\n                {users.map((user, index) => (\n                  <S.ListItem key={index}>\n                    <Avatar icon={<UserOutlined />} />\n                    <S.User>\n                      {user.name} - {user.age}\n                    </S.User>\n                  </S.ListItem>\n                ))}\n              </S.List>\n            ) : (\n              <S.Text>\n                ( <SmileOutlined /> {t('forms.controlFormLabels.noUser')} )\n              </S.Text>\n            );\n          }}\n        </S.UserList>\n      </BaseButtonsForm>\n      <AddUserFormModal open={open} onCancel={hideUserModal} />\n    </BaseButtonsForm.Provider>\n  );\n};\n","import styled from 'styled-components';\nimport { Slider as AntdSlider } from 'antd';\n\nexport const Slider = styled(AntdSlider)`\n  & .ant-slider-mark-text:not(.ant-slider-mark-text-active) {\n    color: var(--subtext-color);\n  }\n`;\n","import { SliderSingleProps } from 'antd';\nimport * as S from './Slider.styles';\n\nexport const Slider: React.FC<SliderSingleProps> = (props) => {\n  return <S.Slider {...props} />;\n};\n","import { Row, Col } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Switch } from '@app/components/common/Switch/Switch';\nimport { Radio, RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { Slider } from '@app/components/common/Slider/Slider';\nimport { Upload, UploadDragger } from '@app/components/common/Upload/Upload';\nimport { Rate } from '@app/components/common/Rate/Rate';\nimport { Checkbox, CheckboxGroup } from '@app/components/common/Checkbox/Checkbox';\nimport { notificationController } from '@app/controllers/notificationController';\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nconst normFile = (e = { fileList: [] }) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nexport const ValidationForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const onFinish = async (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      {...formItemLayout}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      name=\"validateForm\"\n      initialValues={{\n        'input-number': 3,\n        'checkbox-group': ['A', 'B'],\n        rate: 3.5,\n      }}\n      footer={\n        <BaseButtonsForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.submit')}\n          </Button>\n        </BaseButtonsForm.Item>\n      }\n      onFinish={onFinish}\n    >\n      <BaseButtonsForm.Item\n        name=\"select\"\n        label={t('forms.validationFormLabels.select')}\n        hasFeedback\n        rules={[{ required: true, message: t('forms.validationFormLabels.countryError') }]}\n      >\n        <Select placeholder={t('forms.validationFormLabels.selectCountry')}>\n          <Option value=\"china\">{t('forms.validationFormLabels.china')}</Option>\n          <Option value=\"usa\">{t('forms.validationFormLabels.usa')}</Option>\n        </Select>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"select-multiple\"\n        label={t('forms.validationFormLabels.selectMultiple')}\n        rules={[{ required: true, message: t('forms.validationFormLabels.colorError'), type: 'array' }]}\n      >\n        <Select mode=\"multiple\" placeholder={t('forms.validationFormLabels.selectColor')}>\n          <Option value=\"red\">{t('forms.validationFormLabels.red')}</Option>\n          <Option value=\"green\">{t('forms.validationFormLabels.green')}</Option>\n          <Option value=\"blue\">{t('forms.validationFormLabels.blue')}</Option>\n        </Select>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('forms.validationFormLabels.inputNumber')}>\n        <label>\n          <BaseButtonsForm.Item name=\"input-number\" noStyle>\n            <InputNumber min={1} max={10} />\n          </BaseButtonsForm.Item>\n        </label>\n        <span> {t('forms.validationFormLabels.machines')}</span>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"switch\" label={t('forms.validationFormLabels.switch')} valuePropName=\"checked\">\n        <Switch />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"slider\" label={t('forms.validationFormLabels.slider')}>\n        <Slider\n          tooltip={{ open: false }}\n          marks={{\n            0: 'A',\n            20: 'B',\n            40: 'C',\n            60: 'D',\n            80: 'E',\n            100: 'F',\n          }}\n        />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"radio-group\" label={t('forms.validationFormLabels.radioGroup')}>\n        <RadioGroup>\n          <Radio value=\"a\">{t('forms.validationFormLabels.item')} 1</Radio>\n          <Radio value=\"b\">{t('forms.validationFormLabels.item')} 2</Radio>\n          <Radio value=\"c\">{t('forms.validationFormLabels.item')} 3</Radio>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"radio-button\"\n        label={t('forms.validationFormLabels.radioButton')}\n        rules={[{ required: true, message: t('forms.validationFormLabels.itemError') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"a\">{t('forms.validationFormLabels.item')} 1</RadioButton>\n          <RadioButton value=\"b\">{t('forms.validationFormLabels.item')} 2</RadioButton>\n          <RadioButton value=\"c\">{t('forms.validationFormLabels.item')} 3</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"checkbox-group\" label={t('forms.validationFormLabels.checkboxGroup')}>\n        <CheckboxGroup>\n          <Row>\n            <Col span={8}>\n              <Checkbox value=\"A\">A</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"B\" disabled>\n                B\n              </Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"C\">C</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"D\">D</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"E\">E</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"F\">F</Checkbox>\n            </Col>\n          </Row>\n        </CheckboxGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"rate\" label={t('forms.validationFormLabels.rate')}>\n        <Rate />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"upload\"\n        label={t('forms.validationFormLabels.upload')}\n        valuePropName=\"fileList\"\n        getValueFromEvent={normFile}\n      >\n        <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n          <Button type=\"default\" icon={<UploadOutlined />}>\n            {t('forms.validationFormLabels.clickToUpload')}\n          </Button>\n        </Upload>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('forms.validationFormLabels.dragger')}>\n        <BaseButtonsForm.Item name=\"dragger\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\n          <UploadDragger name=\"files\" action=\"/upload.do\">\n            <p>\n              <InboxOutlined />\n            </p>\n            <p>{t('forms.validationFormLabels.clickToDrag')}</p>\n            <p>{t('forms.validationFormLabels.supportSingle')}</p>\n          </UploadDragger>\n        </BaseButtonsForm.Item>\n      </BaseButtonsForm.Item>\n    </BaseButtonsForm>\n  );\n};\n","import styled from 'styled-components';\nimport { Select as CommonSelect } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\nimport { Steps as AntdSteps } from 'antd';\n\nexport const PhoneItem = styled(BaseForm.Item)`\n  .ant-input-group-addon {\n    padding: 0;\n  }\n\n  .ant-input-group-addon > div {\n    width: 100% !important;\n  }\n`;\n\nexport const Steps = styled(AntdSteps)`\n  .ant-steps-item-process > .ant-steps-item-container > .ant-steps-item-content > .ant-steps-item-title {\n    color: var(--primary-color);\n  }\n\n  .ant-steps-item-wait > .ant-steps-item-container > .ant-steps-item-content > .ant-steps-item-title {\n    color: var(--subtext-color);\n  }\n\n  .ant-steps-item-wait .ant-steps-item-icon {\n    border-color: var(--subtext-color);\n    & > .ant-steps-icon {\n      color: var(--subtext-color);\n    }\n  }\n\n  & .ant-steps-item {\n    &-description,\n    &-subtitle {\n      color: var(--subtext-color) !important;\n    }\n  }\n`;\n\nexport const FormContent = styled.div`\n  margin: 1.25rem 0.5rem;\n`;\n\nexport const PrevButton = styled(Button)`\n  margin: 0 0.5rem;\n`;\n\nexport const Select = styled(CommonSelect)`\n  width: 5.9375rem;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n  margin: 1.25rem 0.5rem;\n`;\n\nexport const DetailsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DetailsTitle = styled.div`\n  color: var(--text-light-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  margin-right: 0.5rem;\n`;\n\nexport const DetailsValue = styled.div`\n  color: var(--text-main-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  gap: 0.5rem;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport * as S from '../StepForm.styles';\n\nexport const Step1: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"login\"\n        label={t('forms.stepFormLabels.login')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.loginError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"password\"\n        label={t('common.password')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.passwordError') }]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"confirmPassword\"\n        label={t('common.confirmPassword')}\n        dependencies={['password']}\n        rules={[\n          { required: true, message: t('common.confirmPasswordError') },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('common.confirmPasswordError')));\n            },\n          }),\n        ]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { DatePicker } from '@app/components/common/pickers/DatePicker';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport * as S from '../StepForm.styles';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Picker = styled(DatePicker)`\n  width: 100%;\n`;\n\nexport const Step2: React.FC = () => {\n  const { t } = useTranslation();\n\n  const prefixSelector = (\n    <BaseForm.Item name=\"prefix\" noStyle>\n      <S.Select>\n        <Option value=\"375\">+375</Option>\n        <Option value=\"7\">+7</Option>\n      </S.Select>\n    </BaseForm.Item>\n  );\n\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"salutation\"\n        label={t('forms.stepFormLabels.salutation')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.salutationError') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"mr\">{t('forms.stepFormLabels.mr')}</RadioButton>\n          <RadioButton value=\"mrs\">{t('forms.stepFormLabels.mrs')}</RadioButton>\n        </RadioGroup>\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"gender\"\n        label={t('forms.stepFormLabels.gender')}\n        rules={[{ required: true, message: t('common.requiredField') }]}\n      >\n        <Select placeholder={t('forms.stepFormLabels.gender')}>\n          <Option value=\"male\">{t('forms.stepFormLabels.male')}</Option>\n          <Option value=\"female\">{t('forms.stepFormLabels.female')}</Option>\n        </Select>\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"firstName\"\n        label={t('common.firstName')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.firstNameError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"lastName\"\n        label={t('common.lastName')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.lastNameError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"birthday\"\n        label={t('forms.stepFormLabels.birthday')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.birthdayError') }]}\n      >\n        <Picker format=\"YYYY-MM-DD\" />\n      </BaseForm.Item>\n      <S.PhoneItem\n        name=\"phone\"\n        label={t('common.phone')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.phoneError') }]}\n      >\n        <Input addonBefore={prefixSelector} />\n      </S.PhoneItem>\n      <BaseForm.Item\n        name=\"email\"\n        label={t('common.email')}\n        rules={[\n          {\n            type: 'email',\n            message: t('common.notValidEmail'),\n          },\n        ]}\n      >\n        <Input />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport * as S from '../StepForm.styles';\nimport React from 'react';\n\nexport const Step3: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"address1\"\n        label={`${t('common.address')} 1`}\n        rules={[{ required: true, message: t('forms.stepFormLabels.addressError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"address2\"\n        label={`${t('common.address')} 2`}\n        rules={[{ required: true, message: t('forms.stepFormLabels.addressError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"zipCode\"\n        label={t('common.zipcode')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.zipCodeError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"city\"\n        label={t('common.city')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.cityError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"country\"\n        label={t('common.country')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.countryError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import * as S from '../StepForm.styles';\n\ninterface Field {\n  name?: string;\n  value: string;\n}\n\ninterface Step4Props {\n  formValues: Field[];\n}\n\nexport const Step4: React.FC<Step4Props> = ({ formValues }) => {\n  return (\n    <S.Details key=\"4\">\n      {formValues\n        .filter((item) => !!item.value)\n        .map((item: Field, index: number) => {\n          return (\n            <S.DetailsRow key={index}>\n              <S.DetailsTitle>{item.name}</S.DetailsTitle>\n              <S.DetailsValue>{item.value}</S.DetailsValue>\n            </S.DetailsRow>\n          );\n        })}\n    </S.Details>\n  );\n};\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Step1 } from './Steps/Step1';\nimport { Step2 } from './Steps/Step2';\nimport { Step3 } from './Steps/Step3';\nimport { Step4 } from './Steps/Step4';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { Dates } from '@app/constants/Dates';\nimport { mergeBy } from '@app/utils/utils';\nimport * as S from './StepForm.styles';\nimport { Steps } from './StepForm.styles';\ninterface FormValues {\n  [key: string]: string | undefined;\n}\n\ninterface FieldData {\n  name: string | number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value?: any;\n}\n\nexport const StepForm: React.FC = () => {\n  const [current, setCurrent] = useState(0);\n  const [form] = BaseForm.useForm();\n  const [fields, setFields] = useState<FieldData[]>([\n    { name: 'login', value: 'Jerri' },\n    { name: 'password', value: '123456' },\n    { name: 'confirmPassword', value: '123456' },\n    { name: 'salutation', value: 'mr' },\n    { name: 'gender', value: 'male' },\n    { name: 'firstName', value: 'John' },\n    { name: 'lastName', value: 'Black' },\n    { name: 'birthday', value: Dates.getDate(1576789200000) },\n    { name: 'phone', value: '298573124' },\n    { name: 'email', value: '' },\n    { name: 'address1', value: 'Slobodskay street' },\n    { name: 'address2', value: 'Nevski street' },\n    { name: 'zipCode', value: '435123' },\n    { name: 'city', value: 'Minsk' },\n    { name: 'country', value: 'Belarus' },\n    { name: 'prefix', value: '+7' },\n  ]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const formLabels: FormValues = {\n    login: t('forms.stepFormLabels.login'),\n    password: t('common.password'),\n    confirmPassword: t('common.confirmPassword'),\n    salutation: t('forms.stepFormLabels.salutation'),\n    gender: t('forms.stepFormLabels.gender'),\n    firstName: t('common.firstName'),\n    lastName: t('common.lastName'),\n    birthday: t('forms.stepFormLabels.birthday'),\n    phone: t('common.phone'),\n    email: t('common.email'),\n    address1: `${t('common.address')} 1`,\n    address2: `${t('common.address')} 2`,\n    zipCode: t('common.zipcode'),\n    city: t('common.city'),\n    country: t('common.country'),\n  };\n\n  const formValues = fields\n    .filter((item) => item.name !== 'prefix')\n    .map((item) => ({\n      name: formLabels[item.name],\n      value: String(item.name === 'birthday' && item.value ? item.value.format('YYYY-MM-DD') : item.value),\n    }));\n\n  const next = () => {\n    form.validateFields().then(() => {\n      setCurrent(current + 1);\n    });\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinish = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      notificationController.success({ message: t('common.success') });\n      setIsLoading(false);\n      setCurrent(0);\n    }, 1500);\n  };\n\n  const steps = [\n    {\n      title: t('common.country'),\n    },\n    {\n      title: t('forms.stepFormLabels.info'),\n    },\n    {\n      title: t('forms.stepFormLabels.location'),\n    },\n    {\n      title: t('forms.stepFormLabels.confirm'),\n    },\n  ];\n\n  const formFieldsUi = [\n    <Step1 key=\"1\" />,\n    <Step2 key=\"2\" />,\n    <Step3 key=\"3\" />,\n    <Step4 key=\"4\" formValues={formValues} />,\n  ];\n\n  return (\n    <BaseForm\n      name=\"stepForm\"\n      form={form}\n      fields={fields}\n      onFieldsChange={(_, allFields) => {\n        const currentFields = allFields.map((item) => ({\n          name: Array.isArray(item.name) ? item.name[0] : '',\n          value: item.value,\n        }));\n        const uniqueData = mergeBy(fields, currentFields, 'name');\n        setFields(uniqueData);\n      }}\n    >\n      <Steps labelPlacement=\"vertical\" size=\"small\" current={current} items={steps} />\n\n      <div>{formFieldsUi[current]}</div>\n      <S.Row>\n        {current > 0 && (\n          <S.PrevButton type=\"default\" onClick={() => prev()}>\n            {t('forms.stepFormLabels.previous')}\n          </S.PrevButton>\n        )}\n        {current < steps.length - 1 && (\n          <Button type=\"primary\" onClick={() => next()}>\n            {t('forms.stepFormLabels.next')}\n          </Button>\n        )}\n        {current === steps.length - 1 && (\n          <Button type=\"primary\" onClick={onFinish} loading={isLoading}>\n            {t('forms.stepFormLabels.done')}\n          </Button>\n        )}\n      </S.Row>\n    </BaseForm>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { Card } from '@app/components/common/Card/Card';\nimport { DynamicForm } from '@app/components/forms/DynamicForm/DynamicForm';\nimport { ControlForm } from '@app/components/forms/ControlForm/ControlForm';\nimport { ValidationForm } from '@app/components/forms/ValidationForm/ValidationForm';\nimport { StepForm } from '@app/components/forms/StepForm/StepForm';\n\nconst AdvancedFormsPage: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PageTitle>{t('common.advancedForms')}</PageTitle>\n      <Row gutter={[30, 30]}>\n        <Col xs={24} sm={24} xl={10}>\n          <Card id=\"validation form\" title={t('forms.validationForm')} padding=\"1.25rem\">\n            <ValidationForm />\n          </Card>\n        </Col>\n\n        <Col xs={24} sm={24} xl={14}>\n          <Row gutter={[30, 30]}>\n            <Col span={24}>\n              <Card id=\"control-form\" title={t('forms.controlForm')} padding=\"1.25rem\">\n                <ControlForm />\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card id=\"dynamic-form\" title={t('forms.dynamicForm')} padding=\"1.25rem\">\n                <DynamicForm />\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card id=\"step-form\" title={t('forms.stepForm')} padding=\"1.25rem\">\n                <StepForm />\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default AdvancedFormsPage;\n"],"sourceRoot":""}
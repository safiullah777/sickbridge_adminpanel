{"version":3,"sources":["pages/uiComponentsPages/UIComponentsPage.styles.ts","components/common/Collapse/Collapse.styles.ts","components/common/Collapse/Collapse.tsx","components/common/Result/Result.styles.ts","components/common/Result/Result.tsx","pages/uiComponentsPages/feedback/ResultsPage.tsx"],"names":["Card","styled","CommonCard","InputsWrapper","div","CollapseWrapper","Collapse","AntdCollapse","Panel","props","Result","AntResult","S","BuyButton","Button","media","xs","md","ProgressPage","t","useTranslation","PageTitle","title","status","subTitle","extra","type"],"mappings":"8QAIaA,EAAOC,kBAAOC,IAAPD,CAAkB,uaAwBzBE,EAAgBF,UAAOG,IAAG,2GAO1BC,EAAkBJ,kBAAOK,IAAPL,CAAgB,4C,+IChClCK,EAAWL,kBAAOM,IAAPN,CAAoB,0B,OCA7BO,EAAUD,IAAVC,MAEFF,EAAoC,SAACG,GAChD,OAAO,cAAC,EAAU,eAAKA,GACzB,C,iHCJaC,EAAST,kBAAOU,IAAPV,CAAiB,id,OCC1BS,EAAgC,SAACD,GAC5C,OAAO,cAAC,EAAQ,eAAKA,GACvB,E,kCCGMT,EAAOC,kBAAOW,IAAPX,CAAc,mFAMrBY,EAAYZ,kBAAOa,IAAPb,CAAc,kJACLc,IAAMC,GAIND,IAAME,IAgElBC,UA3DgB,WAC7B,IAAQC,EAAMC,cAAND,EAER,OACE,qCACE,cAACE,EAAA,EAAS,UAAEF,EAAE,mBACd,eAAC,IAAG,WACF,cAACnB,EAAI,CAACsB,MAAOH,EAAE,mBAAmB,SAChC,cAAC,EAAM,CACLI,OAAO,UACPD,MAAOH,EAAE,wBACTK,SAAUL,EAAE,2BACZM,MAAO,CACL,cAACX,EAAA,EAAM,CAACY,KAAK,UAAS,SACnBP,EAAE,sBADsB,WAG3B,cAACN,EAAS,UAAYM,EAAE,qBAAT,YAIrB,cAACnB,EAAI,CAACsB,MAAOH,EAAE,gBAAgB,SAC7B,cAAC,EAAM,CACLG,MAAOH,EAAE,qBACTM,MACE,cAACX,EAAA,EAAM,CAACY,KAAK,UAAS,SACnBP,EAAE,sBADsB,eAMjC,cAACnB,EAAI,CAACsB,MAAOH,EAAE,mBAAmB,SAChC,cAAC,EAAM,CACLI,OAAO,UACPD,MAAOH,EAAE,wBACTM,MACE,cAACX,EAAA,EAAM,CAACY,KAAK,UAAS,SACnBP,EAAE,sBADsB,eAMjC,cAACnB,EAAI,CAACsB,MAAOH,EAAE,iBAAiB,SAC9B,cAAC,EAAM,CACLI,OAAO,QACPD,MAAOH,EAAE,sBACTK,SAAUL,EAAE,yBACZM,MAAO,CACL,cAACX,EAAA,EAAM,CAACY,KAAK,UAAS,SACnBP,EAAE,sBADsB,WAG3B,cAACN,EAAS,UAAYM,EAAE,qBAAT,iBAO7B,C","file":"static/js/30.b4fdfad5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Card as CommonCard } from 'components/common/Card/Card';\nimport { Collapse } from 'components/common/Collapse/Collapse';\n\nexport const Card = styled(CommonCard)`\n  width: 100%;\n  margin-bottom: 1.25rem;\n  .ant-card-head-title {\n    font-size: 1rem;\n  }\n  .ant-card-body {\n    display: flex;\n    flex\n    flex-wrap: wrap;\n    gap: 1.25rem;\n    align-items: center;\n  }\n  .ant-card-body:before {\n    display: none;\n  }\n  .ant-card-body:after {\n    display: none;\n  }\n  &.ant-card-bordered {\n    border: 1px solid var(--border-color);\n  }\n`;\n\nexport const InputsWrapper = styled.div`\n  width: 30rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n`;\n\nexport const CollapseWrapper = styled(Collapse)`\n  width: 40rem;\n`;\n","import styled from 'styled-components';\nimport { Collapse as AntdCollapse } from 'antd';\n\nexport const Collapse = styled(AntdCollapse)``;\n","import { CollapseProps, Collapse as AntdCollapse } from 'antd';\nimport * as S from './Collapse.styles';\n\nexport const { Panel } = AntdCollapse;\n\nexport const Collapse: React.FC<CollapseProps> = (props) => {\n  return <S.Collapse {...props} />;\n};\n","import styled from 'styled-components';\nimport { Result as AntResult } from 'antd';\n\nexport const Result = styled(AntResult)`\n  &.ant-result-success .ant-result-icon > .anticon {\n    color: var(--success-color);\n  }\n\n  &.ant-result-info .ant-result-icon > .anticon {\n    color: var(--primary-color);\n  }\n  &.ant-result-warning .ant-result-icon > .anticon {\n    color: var(--warning-color);\n  }\n  &.ant-result-error .ant-result-icon > .anticon {\n    color: var(--error-color);\n  }\n\n  .ant-result-subtitle {\n    color: var(--breadcrumb-color);\n  }\n`;\n","import React from 'react';\nimport { ResultProps } from 'antd';\nimport * as S from './Result.styles';\n\nexport const Result: React.FC<ResultProps> = (props) => {\n  return <S.Result {...props} />;\n};\n","import { Col } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { Result } from '@app/components/common/Result/Result';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { media } from '@app/styles/themes/constants';\n\nconst Card = styled(S.Card)`\n  .ant-card-body {\n    justify-content: center;\n  }\n`;\n\nconst BuyButton = styled(Button)`\n  @media only screen and ${media.xs} {\n    margin-top: 1rem;\n  }\n\n  @media only screen and ${media.md} {\n    margin-top: 0;\n  }\n`;\n\nconst ProgressPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('common.result')}</PageTitle>\n      <Col>\n        <Card title={t('results.success')}>\n          <Result\n            status=\"success\"\n            title={t('results.successTitle')}\n            subTitle={t('results.successSubTitle')}\n            extra={[\n              <Button type=\"primary\" key=\"console\">\n                {t('results.goConsole')}\n              </Button>,\n              <BuyButton key=\"buy\">{t('results.buyAgain')}</BuyButton>,\n            ]}\n          />\n        </Card>\n        <Card title={t('results.info')}>\n          <Result\n            title={t('results.infoTitle')}\n            extra={\n              <Button type=\"primary\" key=\"console\">\n                {t('results.goConsole')}\n              </Button>\n            }\n          />\n        </Card>\n        <Card title={t('results.warning')}>\n          <Result\n            status=\"warning\"\n            title={t('results.warningTitle')}\n            extra={\n              <Button type=\"primary\" key=\"console\">\n                {t('results.goConsole')}\n              </Button>\n            }\n          />\n        </Card>\n        <Card title={t('results.error')}>\n          <Result\n            status=\"error\"\n            title={t('results.errorTitle')}\n            subTitle={t('results.errorSubTitle')}\n            extra={[\n              <Button type=\"primary\" key=\"console\">\n                {t('results.goConsole')}\n              </Button>,\n              <BuyButton key=\"buy\">{t('results.buyAgain')}</BuyButton>,\n            ]}\n          />\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ProgressPage;\n"],"sourceRoot":""}
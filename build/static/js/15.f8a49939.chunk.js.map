{"version":3,"sources":["pages/uiComponentsPages/UIComponentsPage.styles.ts","components/common/Collapse/Collapse.styles.ts","components/common/Collapse/Collapse.tsx","components/common/Dropdown/Dropdown.styles.ts","components/common/Dropdown/Dropdown.tsx","pages/uiComponentsPages/DropdownsPage.tsx"],"names":["Card","styled","CommonCard","InputsWrapper","div","CollapseWrapper","Collapse","AntdCollapse","Panel","props","Dropdown","AntDropdown","children","getPopupContainer","triggerNode","ContextMenuWrapper","DropdownsPage","t","useTranslation","basicItems","key","label","icon","disabled","danger","positionItems","title","menu","items","onClick","e","preventDefault","size","wrap","placement","arrow","trigger"],"mappings":"8QAIaA,EAAOC,kBAAOC,IAAPD,CAAkB,uaAwBzBE,EAAgBF,UAAOG,IAAG,2GAO1BC,EAAkBJ,kBAAOK,IAAPL,CAAgB,4C,+IChClCK,EAAWL,kBAAOM,IAAPN,CAAoB,0B,OCA7BO,EAAUD,IAAVC,MAEFF,EAAoC,SAACG,GAChD,OAAO,cAAC,EAAU,eAAKA,GACzB,C,2HCJaC,EAAWT,kBAAOU,IAAPV,CAAmB,0B,sBCC9BS,EAAoC,SAAH,GAAgC,IAA1BE,EAAQ,EAARA,SAAaH,EAAK,iBACpE,OACE,cAAC,EAAU,yBAACI,kBAAmB,SAACC,GAAW,OAAKA,CAAW,GAAML,GAAK,aACnEG,IAGP,C,kJCDMG,EAAqBd,UAAOG,IAAG,oKAoGtBY,UA3FiB,WAC9B,IAAQC,EAAMC,cAAND,EAEFE,EAAa,CACjB,CACEC,IAAK,IACLC,MAAOJ,EAAE,wBAEX,CACEG,IAAK,IACLC,MAAM,GAAD,OAAKJ,EAAE,wBAAuB,YAAIA,EAAE,uBACzCK,KAAM,cAAC,IAAY,IACnBC,UAAU,GAEZ,CACEH,IAAK,IACLC,MAAM,GAAD,OAAKJ,EAAE,uBAAsB,YAAIA,EAAE,uBACxCM,UAAU,GAEZ,CACEH,IAAK,IACLC,MAAOJ,EAAE,wBACTO,QAAQ,IAINC,EAAgB,CACpB,CACEL,IAAK,IACLC,MAAOJ,EAAE,wBAEX,CACEG,IAAK,IACLC,MAAOJ,EAAE,yBAEX,CACEG,IAAK,IACLC,MAAOJ,EAAE,yBAIb,OACE,qCACE,cAAC,IAAS,UAAEA,EAAE,qBACd,eAAC,IAAG,WACF,cAAC,IAAM,CAACS,MAAOT,EAAE,mBAAmB,SAClC,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOT,GAAa,SACpC,eAAC,IAAM,CAACU,QAAS,SAACC,GAAC,OAAKA,EAAEC,gBAAgB,EAAC,UACxCd,EAAE,qBAAqB,IAAC,cAAC,IAAY,WAI5C,cAAC,IAAM,CAACS,MAAOT,EAAE,uBAAuB,SACtC,eAAC,IAAK,CAACe,KAAM,GAAIC,MAAI,YACnB,cAAC,IAAQ,CAACN,KAAM,CAAEC,MAAOT,GAAce,UAAU,aAAaC,OAAK,WACjE,cAAC,IAAM,UAAElB,EAAE,oBAEb,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOT,GAAce,UAAU,SAASC,OAAK,WAC7D,cAAC,IAAM,UAAElB,EAAE,mBAEb,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOT,GAAce,UAAU,cAAcC,OAAK,WAClE,cAAC,IAAM,UAAElB,EAAE,oBAEb,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOT,GAAce,UAAU,UAAUC,OAAK,WAC9D,cAAC,IAAM,UAAElB,EAAE,oBAEb,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOT,GAAce,UAAU,MAAMC,OAAK,WAC1D,cAAC,IAAM,UAAElB,EAAE,mBAEb,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOT,GAAce,UAAU,WAAWC,OAAK,WAC/D,cAAC,IAAM,UAAElB,EAAE,yBAIjB,cAAC,IAAM,CAACS,MAAOT,EAAE,uBAAuB,SACtC,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOH,GAAiBW,QAAS,CAAC,SAAS,SAC3D,eAAC,IAAM,CAACP,QAAS,SAACC,GAAC,OAAKA,EAAEC,gBAAgB,EAAC,UACxCd,EAAE,qBAAqB,IAAC,cAAC,IAAY,WAI5C,cAAC,IAAM,CAACS,MAAOT,EAAE,qBAAqB,SACpC,cAAC,IAAQ,CAACU,KAAM,CAAEC,MAAOH,GAAiBW,QAAS,CAAC,eAAe,SACjE,cAACrB,EAAkB,UAAEE,EAAE,mCAMnC,C","file":"static/js/15.f8a49939.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Card as CommonCard } from 'components/common/Card/Card';\nimport { Collapse } from 'components/common/Collapse/Collapse';\n\nexport const Card = styled(CommonCard)`\n  width: 100%;\n  margin-bottom: 1.25rem;\n  .ant-card-head-title {\n    font-size: 1rem;\n  }\n  .ant-card-body {\n    display: flex;\n    flex\n    flex-wrap: wrap;\n    gap: 1.25rem;\n    align-items: center;\n  }\n  .ant-card-body:before {\n    display: none;\n  }\n  .ant-card-body:after {\n    display: none;\n  }\n  &.ant-card-bordered {\n    border: 1px solid var(--border-color);\n  }\n`;\n\nexport const InputsWrapper = styled.div`\n  width: 30rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n`;\n\nexport const CollapseWrapper = styled(Collapse)`\n  width: 40rem;\n`;\n","import styled from 'styled-components';\nimport { Collapse as AntdCollapse } from 'antd';\n\nexport const Collapse = styled(AntdCollapse)``;\n","import { CollapseProps, Collapse as AntdCollapse } from 'antd';\nimport * as S from './Collapse.styles';\n\nexport const { Panel } = AntdCollapse;\n\nexport const Collapse: React.FC<CollapseProps> = (props) => {\n  return <S.Collapse {...props} />;\n};\n","import styled from 'styled-components';\nimport { Dropdown as AntDropdown } from 'antd';\n\nexport const Dropdown = styled(AntDropdown)``;\n","import React from 'react';\nimport { DropDownProps } from 'antd';\nimport * as S from './Dropdown.styles';\n\nexport const Dropdown: React.FC<DropDownProps> = ({ children, ...props }) => {\n  return (\n    <S.Dropdown getPopupContainer={(triggerNode) => triggerNode} {...props}>\n      {children}\n    </S.Dropdown>\n  );\n};\n","import { Col, Space } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\n\nconst ContextMenuWrapper = styled.div`\n  height: 12.5rem;\n  width: 18.75rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: lightgrey;\n`;\n\nconst DropdownsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  const basicItems = [\n    {\n      key: '1',\n      label: t('dropdowns.firstItem'),\n    },\n    {\n      key: '2',\n      label: `${t('dropdowns.secondItem')} ${t('dropdowns.disabled')}`,\n      icon: <DownOutlined />,\n      disabled: true,\n    },\n    {\n      key: '3',\n      label: `${t('dropdowns.thirdItem')} ${t('dropdowns.disabled')}`,\n      disabled: true,\n    },\n    {\n      key: '4',\n      label: t('dropdowns.dangerItem'),\n      danger: true,\n    },\n  ];\n\n  const positionItems = [\n    {\n      key: '1',\n      label: t('dropdowns.firstItem'),\n    },\n    {\n      key: '2',\n      label: t('dropdowns.secondItem'),\n    },\n    {\n      key: '3',\n      label: t('dropdowns.thirdItem'),\n    },\n  ];\n\n  return (\n    <>\n      <PageTitle>{t('common.dropdown')}</PageTitle>\n      <Col>\n        <S.Card title={t('dropdowns.basic')}>\n          <Dropdown menu={{ items: basicItems }}>\n            <Button onClick={(e) => e.preventDefault()}>\n              {t('dropdowns.hoverMe')} <DownOutlined />\n            </Button>\n          </Dropdown>\n        </S.Card>\n        <S.Card title={t('dropdowns.positions')}>\n          <Space size={16} wrap>\n            <Dropdown menu={{ items: basicItems }} placement=\"bottomLeft\" arrow>\n              <Button>{t('dropdowns.bl')}</Button>\n            </Dropdown>\n            <Dropdown menu={{ items: basicItems }} placement=\"bottom\" arrow>\n              <Button>{t('dropdowns.b')}</Button>\n            </Dropdown>\n            <Dropdown menu={{ items: basicItems }} placement=\"bottomRight\" arrow>\n              <Button>{t('dropdowns.br')}</Button>\n            </Dropdown>\n            <Dropdown menu={{ items: basicItems }} placement=\"topLeft\" arrow>\n              <Button>{t('dropdowns.tl')}</Button>\n            </Dropdown>\n            <Dropdown menu={{ items: basicItems }} placement=\"top\" arrow>\n              <Button>{t('dropdowns.t')}</Button>\n            </Dropdown>\n            <Dropdown menu={{ items: basicItems }} placement=\"topRight\" arrow>\n              <Button>{t('dropdowns.tr')}</Button>\n            </Dropdown>\n          </Space>\n        </S.Card>\n        <S.Card title={t('dropdowns.clickable')}>\n          <Dropdown menu={{ items: positionItems }} trigger={['click']}>\n            <Button onClick={(e) => e.preventDefault()}>\n              {t('dropdowns.clickMe')} <DownOutlined />\n            </Button>\n          </Dropdown>\n        </S.Card>\n        <S.Card title={t('dropdowns.context')}>\n          <Dropdown menu={{ items: positionItems }} trigger={['contextMenu']}>\n            <ContextMenuWrapper>{t('dropdowns.rightClick')}</ContextMenuWrapper>\n          </Dropdown>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default DropdownsPage;\n"],"sourceRoot":""}
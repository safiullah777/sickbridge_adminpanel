{"version":3,"sources":["pages/uiComponentsPages/UIComponentsPage.styles.ts","components/common/Collapse/Collapse.styles.ts","components/common/Collapse/Collapse.tsx","pages/uiComponentsPages/modals/PopoversPage.tsx","../node_modules/antd/es/popconfirm/PurePanel.js","../node_modules/antd/es/popconfirm/index.js","components/common/Popconfirm/Popconfirm.styles.ts","components/common/Popconfirm/Popconfirm.tsx","pages/uiComponentsPages/modals/PopconfirmsPage.tsx"],"names":["Card","styled","CommonCard","InputsWrapper","div","CollapseWrapper","Collapse","AntdCollapse","Panel","props","buttonWidth","PopoverButton","TopButtons","media","xs","md","LeftButtons","RightButtons","BottomButtons","PopoversPage","t","useTranslation","title","content","type","placement","trigger","Overlay","prefixCls","okButtonProps","cancelButtonProps","cancelText","okText","okType","icon","_props$showCancel","showCancel","close","onConfirm","onCancel","getPrefixCls","React","ConfigContext","LocaleReceiver","componentName","defaultLocale","Popconfirm","contextLocale","className","concat","getRenderPropValue","Button","_extends","onClick","size","ActionButton","buttonProps","convertLegacyProps","actionFn","quitOnNullishReturnValue","emitEvent","_this","__rest","s","e","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","ref","_useMergedState","useMergedState","value","undefined","open","visible","defaultValue","defaultOpen","defaultVisible","_useMergedState2","_slicedToArray","setOpen","settingOpen","_a","_b","onVisibleChange","onOpenChange","customizePrefixCls","_props$placement","_props$trigger","_props$okType","_props$icon","ExclamationCircleFilled","children","overlayClassName","restProps","prefixClsConfirm","overlayClassNames","classNames","Popover","_props$disabled","disabled","_overlay","cloneElement","onKeyDown","keyCode","KeyCode","ESC","_onKeyDown","AntPopconfirm","AsyncButton","FONT_SIZE","PopconfirmsPage","useState","confirmLoading","setConfirmLoading","text","confirm","message","info","PageTitle","setTimeout","loading"],"mappings":"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","file":"static/js/12.c657f4d5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Card as CommonCard } from 'components/common/Card/Card';\nimport { Collapse } from 'components/common/Collapse/Collapse';\n\nexport const Card = styled(CommonCard)`\n  width: 100%;\n  margin-bottom: 1.25rem;\n  .ant-card-head-title {\n    font-size: 1rem;\n  }\n  .ant-card-body {\n    display: flex;\n    flex\n    flex-wrap: wrap;\n    gap: 1.25rem;\n    align-items: center;\n  }\n  .ant-card-body:before {\n    display: none;\n  }\n  .ant-card-body:after {\n    display: none;\n  }\n  &.ant-card-bordered {\n    border: 1px solid var(--border-color);\n  }\n`;\n\nexport const InputsWrapper = styled.div`\n  width: 30rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n`;\n\nexport const CollapseWrapper = styled(Collapse)`\n  width: 40rem;\n`;\n","import styled from 'styled-components';\nimport { Collapse as AntdCollapse } from 'antd';\n\nexport const Collapse = styled(AntdCollapse)``;\n","import { CollapseProps, Collapse as AntdCollapse } from 'antd';\nimport * as S from './Collapse.styles';\n\nexport const { Panel } = AntdCollapse;\n\nexport const Collapse: React.FC<CollapseProps> = (props) => {\n  return <S.Collapse {...props} />;\n};\n","import { Col } from 'antd';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Popover } from '@app/components/common/Popover/Popover';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { media } from '@app/styles/themes/constants';\n\nconst buttonWidth = 70;\n\nexport const PopoverButton = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const TopButtons = styled(PopoverButton)`\n  white-space: nowrap;\n\n  @media only screen and ${media.xs} {\n    margin-left: ${buttonWidth - 24}px;\n  }\n\n  @media only screen and ${media.md} {\n    margin-left: ${buttonWidth + 18}px;\n  }\n`;\nexport const LeftButtons = styled(PopoverButton)`\n  flex-direction: column;\n  width: ${buttonWidth}px;\n  float: left;\n`;\n\nexport const RightButtons = styled(PopoverButton)`\n  flex-direction: column;\n  width: ${buttonWidth}px;\n\n  @media only screen and ${media.xs} {\n    margin-left: ${buttonWidth * 3 - 14}px;\n  }\n\n  @media only screen and ${media.md} {\n    margin-left: ${buttonWidth * 4}px;\n  }\n`;\n\nexport const BottomButtons = styled(PopoverButton)`\n  margin-left: ${buttonWidth}px;\n  clear: both;\n  whitespace: nowrap;\n  @media only screen and ${media.xs} {\n    margin-left: ${buttonWidth - 44}px;\n  }\n\n  @media only screen and ${media.md} {\n    margin-left: ${buttonWidth}px;\n  }\n`;\n\nconst PopoversPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  const title = <span>{t('popovers.title')}</span>;\n  const content = (\n    <div>\n      <p>{t('popovers.content')}</p>\n      <p>{t('popovers.content')}</p>\n    </div>\n  );\n\n  return (\n    <>\n      <PageTitle>{t('common.popover')}</PageTitle>\n      <Col>\n        <S.Card title={t('popovers.basic')}>\n          <Popover content={content} title={title}>\n            <Button type=\"primary\">{t('popovers.hover')}</Button>\n          </Popover>\n        </S.Card>\n        <S.Card title={t('popovers.positions')}>\n          <div>\n            <TopButtons>\n              <Popover placement=\"topLeft\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.tl')}</Button>\n              </Popover>\n              <Popover placement=\"top\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.top')}</Button>\n              </Popover>\n              <Popover placement=\"topRight\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.tr')}</Button>\n              </Popover>\n            </TopButtons>\n            <LeftButtons>\n              <Popover placement=\"leftTop\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.lt')}</Button>\n              </Popover>\n              <Popover placement=\"left\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.left')}</Button>\n              </Popover>\n              <Popover placement=\"leftBottom\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.lb')}</Button>\n              </Popover>\n            </LeftButtons>\n            <RightButtons>\n              <Popover placement=\"rightTop\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.rt')}</Button>\n              </Popover>\n              <Popover placement=\"right\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.right')}</Button>\n              </Popover>\n              <Popover placement=\"rightBottom\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.rb')}</Button>\n              </Popover>\n            </RightButtons>\n            <BottomButtons>\n              <Popover placement=\"bottomLeft\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.bl')}</Button>\n              </Popover>\n              <Popover placement=\"bottom\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.bottom')}</Button>\n              </Popover>\n              <Popover placement=\"bottomRight\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.br')}</Button>\n              </Popover>\n            </BottomButtons>\n          </div>\n        </S.Card>\n        <S.Card title={t('popovers.triggers')}>\n          <Popover content={content} title={title} trigger=\"hover\">\n            <Button>{t('popovers.hover')}</Button>\n          </Popover>\n          <Popover content={content} title={title} trigger=\"focus\">\n            <Button>{t('popovers.focus')}</Button>\n          </Popover>\n          <Popover content={content} title={title} trigger=\"click\">\n            <Button>{t('popovers.click')}</Button>\n          </Popover>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default PopoversPage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/button';\nimport ActionButton from '../_util/ActionButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport { ConfigContext } from '../config-provider';\nexport var Overlay = function Overlay(props) {\n  var prefixCls = props.prefixCls,\n    okButtonProps = props.okButtonProps,\n    cancelButtonProps = props.cancelButtonProps,\n    title = props.title,\n    cancelText = props.cancelText,\n    okText = props.okText,\n    okType = props.okType,\n    icon = props.icon,\n    _props$showCancel = props.showCancel,\n    showCancel = _props$showCancel === void 0 ? true : _props$showCancel,\n    close = props.close,\n    onConfirm = props.onConfirm,\n    onCancel = props.onCancel;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Popconfirm\",\n    defaultLocale: defaultLocale.Popconfirm\n  }, function (contextLocale) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, icon && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-message-icon\")\n    }, icon), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message-title\")\n    }, getRenderPropValue(title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-buttons\")\n    }, showCancel && /*#__PURE__*/React.createElement(Button, _extends({\n      onClick: onCancel,\n      size: \"small\"\n    }, cancelButtonProps), cancelText !== null && cancelText !== void 0 ? cancelText : contextLocale.cancelText), /*#__PURE__*/React.createElement(ActionButton, {\n      buttonProps: _extends(_extends({\n        size: 'small'\n      }, convertLegacyProps(okType)), okButtonProps),\n      actionFn: onConfirm,\n      close: close,\n      prefixCls: getPrefixCls('btn'),\n      quitOnNullishReturnValue: true,\n      emitEvent: true\n    }, okText !== null && okText !== void 0 ? okText : contextLocale.okText)));\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this;\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport { Overlay } from './PurePanel';\nvar Popconfirm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var _useMergedState = useMergedState(false, {\n      value: props.open !== undefined ? props.open : props.visible,\n      defaultValue: props.defaultOpen !== undefined ? props.defaultOpen : props.defaultVisible\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    open = _useMergedState2[0],\n    setOpen = _useMergedState2[1];\n  // const isDestroyed = useDestroyed();\n  var settingOpen = function settingOpen(value, e) {\n    var _a, _b;\n    setOpen(value, true);\n    (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, value, e);\n    (_b = props.onOpenChange) === null || _b === void 0 ? void 0 : _b.call(props, value, e);\n  };\n  var close = function close(e) {\n    settingOpen(false, e);\n  };\n  var onConfirm = function onConfirm(e) {\n    var _a;\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n  var onCancel = function onCancel(e) {\n    var _a;\n    settingOpen(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n  var _onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === KeyCode.ESC && open) {\n      settingOpen(false, e);\n    }\n  };\n  var onOpenChange = function onOpenChange(value) {\n    var _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled;\n    if (disabled) {\n      return;\n    }\n    settingOpen(value);\n  };\n  var customizePrefixCls = props.prefixCls,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'top' : _props$placement,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n    _props$okType = props.okType,\n    okType = _props$okType === void 0 ? 'primary' : _props$okType,\n    _props$icon = props.icon,\n    icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(ExclamationCircleFilled, null) : _props$icon,\n    children = props.children,\n    overlayClassName = props.overlayClassName,\n    restProps = __rest(props, [\"prefixCls\", \"placement\", \"trigger\", \"okType\", \"icon\", \"children\", \"overlayClassName\"]);\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var prefixClsConfirm = getPrefixCls('popconfirm', customizePrefixCls);\n  var overlayClassNames = classNames(prefixClsConfirm, overlayClassName);\n  return /*#__PURE__*/React.createElement(Popover, _extends({}, restProps, {\n    trigger: trigger,\n    prefixCls: prefixCls,\n    placement: placement,\n    onOpenChange: onOpenChange,\n    open: open,\n    ref: ref,\n    overlayClassName: overlayClassNames,\n    _overlay: /*#__PURE__*/React.createElement(Overlay, _extends({\n      okType: okType,\n      icon: icon\n    }, props, {\n      prefixCls: prefixCls,\n      close: close,\n      onConfirm: onConfirm,\n      onCancel: onCancel\n    }))\n  }), cloneElement(children, {\n    onKeyDown: function onKeyDown(e) {\n      var _a, _b;\n      if ( /*#__PURE__*/React.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n      _onKeyDown(e);\n    }\n  }));\n});\nexport default Popconfirm;","import styled from 'styled-components';\nimport { Popconfirm as AntPopconfirm } from 'antd';\n\nexport const Popconfirm = styled(AntPopconfirm)``;\n","import React from 'react';\nimport { PopconfirmProps } from 'antd';\nimport * as S from './Popconfirm.styles';\n\nexport const Popconfirm: React.FC<PopconfirmProps> = ({ children, ...props }) => {\n  return <S.Popconfirm {...props}>{children}</S.Popconfirm>;\n};\n","import { useState } from 'react';\nimport { Col, message } from 'antd';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Popconfirm } from '@app/components/common/Popconfirm/Popconfirm';\nimport { TopButtons, LeftButtons, RightButtons, BottomButtons } from '@app/pages/uiComponentsPages/modals/PopoversPage';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { FONT_SIZE, media } from '@app/styles/themes/constants';\n\nconst AsyncButton = styled(Button)`\n  @media only screen and ${media.xs} {\n    font-size: ${FONT_SIZE.xs};\n  }\n  @media only screen and ${media.md} {\n    font-size: ${FONT_SIZE.md};\n  }\n`;\n\nconst PopconfirmsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState<boolean>(false);\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n\n  const text = t('popconfirm.content');\n\n  const confirm = () => {\n    message.info(t('popconfirm.yesClick'));\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setOpen(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.popconfirm')}</PageTitle>\n      <Col>\n        <S.Card title={t('popconfirm.basic')}>\n          <Popconfirm title={text}>\n            <Button type=\"primary\">{t('common.delete')}</Button>\n          </Popconfirm>\n        </S.Card>\n        <S.Card title={t('popconfirm.positions')}>\n          <div>\n            <TopButtons>\n              <Popconfirm\n                placement=\"topLeft\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.tl')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"top\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.top')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"topRight\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.tr')}</Button>\n              </Popconfirm>\n            </TopButtons>\n            <LeftButtons>\n              <Popconfirm\n                placement=\"leftTop\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.lt')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"left\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.left')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"leftBottom\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.lb')}</Button>\n              </Popconfirm>\n            </LeftButtons>\n            <RightButtons>\n              <Popconfirm\n                placement=\"rightTop\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.rt')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"right\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.right')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"rightBottom\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.rb')}</Button>\n              </Popconfirm>\n            </RightButtons>\n            <BottomButtons>\n              <Popconfirm\n                placement=\"bottomLeft\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.bl')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"bottom\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.bottom')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"bottomRight\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.br')}</Button>\n              </Popconfirm>\n            </BottomButtons>\n          </div>\n        </S.Card>\n        <S.Card title={t('popconfirm.async')}>\n          <Popconfirm\n            title={t('popovers.title')}\n            open={open}\n            onConfirm={handleOk}\n            okButtonProps={{ loading: confirmLoading }}\n            onCancel={() => setOpen(false)}\n          >\n            <AsyncButton type=\"primary\" onClick={() => setOpen(true)}>\n              {t('popconfirm.openAsync')}\n            </AsyncButton>\n          </Popconfirm>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default PopconfirmsPage;\n"],"sourceRoot":""}
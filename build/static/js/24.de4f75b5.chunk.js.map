{"version":3,"sources":["pages/uiComponentsPages/UIComponentsPage.styles.ts","components/common/Collapse/Collapse.styles.ts","components/common/Collapse/Collapse.tsx","../node_modules/@ant-design/icons-svg/es/asn/AntDesignOutlined.js","../node_modules/@ant-design/icons/es/icons/AntDesignOutlined.js","pages/uiComponentsPages/dataDisplay/AvatarsPage.tsx"],"names":["Card","styled","CommonCard","InputsWrapper","div","CollapseWrapper","Collapse","AntdCollapse","Panel","props","AntDesignOutlined","ref","React","AntdIcon","_objectSpread","icon","AntDesignOutlinedSvg","displayName","AvatarsPage","t","useTranslation","PageTitle","title","Avatar","size","UserOutlined","shape","maxCount","maxStyle","color","BASE_COLORS","red","backgroundColor","orange","src","style","placement","green","blue","Badge","count","dot"],"mappings":"8QAIaA,EAAOC,kBAAOC,IAAPD,CAAkB,uaAwBzBE,EAAgBF,UAAOG,IAAG,2GAO1BC,EAAkBJ,kBAAOK,IAAPL,CAAgB,4C,+IChClCK,EAAWL,kBAAOM,IAAPN,CAAoB,0B,OCA7BO,EAAUD,IAAVC,MAEFF,EAAoC,SAACG,GAChD,OAAO,cAAC,EAAU,eAAKA,GACzB,C,mGCLeC,EADS,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gpBAAopB,KAAQ,aAAc,MAAS,Y,QCK90BA,EAAoB,SAA2BD,EAAOE,GACxD,OAAoBC,gBAAoBC,IAAUC,YAAcA,YAAc,CAAC,EAAGL,GAAQ,CAAC,EAAG,CAC5FE,IAAKA,EACLI,KAAMC,IAEV,EACAN,EAAkBO,YAAc,oBACJL,mBAAiBF,G,mDCsC9BQ,UA1Ce,WAC5B,IAAQC,EAAMC,cAAND,EAER,OACE,qCACE,cAACE,EAAA,EAAS,UAAEF,EAAE,mBACd,eAAC,IAAG,WACF,eAAC,IAAM,CAACG,MAAOH,EAAE,6BAA6B,UAC5C,cAACI,EAAA,EAAM,CAACC,KAAK,QAAQT,KAAM,cAACU,EAAA,EAAY,MACxC,cAACF,EAAA,EAAM,CAACR,KAAM,cAACU,EAAA,EAAY,MAC3B,cAACF,EAAA,EAAM,CAACC,KAAK,QAAQT,KAAM,cAACU,EAAA,EAAY,MACxC,cAACF,EAAA,EAAM,CAACC,KAAM,GAAIT,KAAM,cAACU,EAAA,EAAY,SAEvC,eAAC,IAAM,CAACH,MAAOH,EAAE,8BAA8B,UAC7C,cAACI,EAAA,EAAM,CAACC,KAAM,GAAIT,KAAM,cAACU,EAAA,EAAY,MACrC,cAACF,EAAA,EAAM,CAACC,KAAM,GAAIE,MAAM,SAASX,KAAM,cAACU,EAAA,EAAY,SAEtD,cAAC,IAAM,CAACH,MAAOH,EAAE,8BAA8B,SAC7C,eAAC,IAAK,CAACQ,SAAU,EAAGH,KAAM,GAAII,SAAU,CAAEC,MAAOC,IAAYC,IAAKC,gBAAiBF,IAAYG,QAAS,UACtG,cAACV,EAAA,EAAM,CAACC,KAAM,GAAIU,IAAI,uCACtB,cAACX,EAAA,EAAM,CAACC,KAAM,GAAIW,MAAO,CAAEH,gBAAiBF,IAAYC,KAAM,SAAC,MAG/D,cAAC,IAAO,CAACT,MAAOH,EAAE,4BAA6BiB,UAAU,MAAK,SAC5D,cAACb,EAAA,EAAM,CAACC,KAAM,GAAIW,MAAO,CAAEH,gBAAiBF,IAAYO,OAAStB,KAAM,cAACU,EAAA,EAAY,QAEtF,cAACF,EAAA,EAAM,CAACC,KAAM,GAAIW,MAAO,CAAEH,gBAAiBF,IAAYQ,MAAQvB,KAAM,cAAC,EAAiB,WAG5F,eAAC,IAAM,CAACO,MAAOH,EAAE,6BAA6B,UAC5C,cAACoB,EAAA,EAAK,CAACC,MAAO,EAAE,SACd,cAACjB,EAAA,EAAM,CAACC,KAAM,GAAIE,MAAM,SAASX,KAAM,cAACU,EAAA,EAAY,QAEtD,cAACc,EAAA,EAAK,CAACE,KAAG,WACR,cAAClB,EAAA,EAAM,CAACC,KAAM,GAAIE,MAAM,SAASX,KAAM,cAACU,EAAA,EAAY,gBAMhE,C","file":"static/js/24.de4f75b5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Card as CommonCard } from 'components/common/Card/Card';\nimport { Collapse } from 'components/common/Collapse/Collapse';\n\nexport const Card = styled(CommonCard)`\n  width: 100%;\n  margin-bottom: 1.25rem;\n  .ant-card-head-title {\n    font-size: 1rem;\n  }\n  .ant-card-body {\n    display: flex;\n    flex\n    flex-wrap: wrap;\n    gap: 1.25rem;\n    align-items: center;\n  }\n  .ant-card-body:before {\n    display: none;\n  }\n  .ant-card-body:after {\n    display: none;\n  }\n  &.ant-card-bordered {\n    border: 1px solid var(--border-color);\n  }\n`;\n\nexport const InputsWrapper = styled.div`\n  width: 30rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n`;\n\nexport const CollapseWrapper = styled(Collapse)`\n  width: 40rem;\n`;\n","import styled from 'styled-components';\nimport { Collapse as AntdCollapse } from 'antd';\n\nexport const Collapse = styled(AntdCollapse)``;\n","import { CollapseProps, Collapse as AntdCollapse } from 'antd';\nimport * as S from './Collapse.styles';\n\nexport const { Panel } = AntdCollapse;\n\nexport const Collapse: React.FC<CollapseProps> = (props) => {\n  return <S.Collapse {...props} />;\n};\n","// This icon file is generated automatically.\nvar AntDesignOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M716.3 313.8c19-18.9 19-49.7 0-68.6l-69.9-69.9.1.1c-18.5-18.5-50.3-50.3-95.3-95.2-21.2-20.7-55.5-20.5-76.5.5L80.9 474.2a53.84 53.84 0 000 76.4L474.6 944a54.14 54.14 0 0076.5 0l165.1-165c19-18.9 19-49.7 0-68.6a48.7 48.7 0 00-68.7 0l-125 125.2c-5.2 5.2-13.3 5.2-18.5 0L189.5 521.4c-5.2-5.2-5.2-13.3 0-18.5l314.4-314.2c.4-.4.9-.7 1.3-1.1 5.2-4.1 12.4-3.7 17.2 1.1l125.2 125.1c19 19 49.8 19 68.7 0zM408.6 514.4a106.3 106.2 0 10212.6 0 106.3 106.2 0 10-212.6 0zm536.2-38.6L821.9 353.5c-19-18.9-49.8-18.9-68.7.1a48.4 48.4 0 000 68.6l83 82.9c5.2 5.2 5.2 13.3 0 18.5l-81.8 81.7a48.4 48.4 0 000 68.6 48.7 48.7 0 0068.7 0l121.8-121.7a53.93 53.93 0 00-.1-76.4z\" } }] }, \"name\": \"ant-design\", \"theme\": \"outlined\" };\nexport default AntDesignOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport AntDesignOutlinedSvg from \"@ant-design/icons-svg/es/asn/AntDesignOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar AntDesignOutlined = function AntDesignOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: AntDesignOutlinedSvg\n  }));\n};\nAntDesignOutlined.displayName = 'AntDesignOutlined';\nexport default /*#__PURE__*/React.forwardRef(AntDesignOutlined);","import { Col, Tooltip } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { UserOutlined, AntDesignOutlined } from '@ant-design/icons';\nimport { Avatar, Group } from '@app/components/common/Avatar/Avatar';\nimport { Badge } from '@app/components/common/Badge/Badge';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { BASE_COLORS } from '@app/styles/themes/constants';\n\nconst AvatarsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('common.avatar')}</PageTitle>\n      <Col>\n        <S.Card title={t('dataDisplay.avatars.sizes')}>\n          <Avatar size=\"small\" icon={<UserOutlined />} />\n          <Avatar icon={<UserOutlined />} />\n          <Avatar size=\"large\" icon={<UserOutlined />} />\n          <Avatar size={64} icon={<UserOutlined />} />\n        </S.Card>\n        <S.Card title={t('dataDisplay.avatars.shapes')}>\n          <Avatar size={45} icon={<UserOutlined />} />\n          <Avatar size={45} shape=\"square\" icon={<UserOutlined />} />\n        </S.Card>\n        <S.Card title={t('dataDisplay.avatars.groups')}>\n          <Group maxCount={2} size={45} maxStyle={{ color: BASE_COLORS.red, backgroundColor: BASE_COLORS.orange }}>\n            <Avatar size={45} src=\"https://joeschmoe.io/api/v1/random\" />\n            <Avatar size={45} style={{ backgroundColor: BASE_COLORS.red }}>\n              K\n            </Avatar>\n            <Tooltip title={t('dataDisplay.avatars.user')} placement=\"top\">\n              <Avatar size={45} style={{ backgroundColor: BASE_COLORS.green }} icon={<UserOutlined />} />\n            </Tooltip>\n            <Avatar size={45} style={{ backgroundColor: BASE_COLORS.blue }} icon={<AntDesignOutlined />} />\n          </Group>\n        </S.Card>\n        <S.Card title={t('dataDisplay.avatars.badge')}>\n          <Badge count={1}>\n            <Avatar size={45} shape=\"square\" icon={<UserOutlined />} />\n          </Badge>\n          <Badge dot>\n            <Avatar size={45} shape=\"square\" icon={<UserOutlined />} />\n          </Badge>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default AvatarsPage;\n"],"sourceRoot":""}